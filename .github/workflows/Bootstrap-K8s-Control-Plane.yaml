name: Bootstrap K8s Control Plane

on:
  workflow_dispatch:

jobs:
  setup-control-plane:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Read control plane IP from AWS SSM
        id: read_ip
        run: |
          CONTROL_PLANE_IP=$(aws ssm get-parameter \
            --name "/k8s/control-plane-ip" \
            --query "Parameter.Value" \
            --output text)
          echo "✅ IP from SSM: $CONTROL_PLANE_IP"
          echo "CONTROL_PLANE_IP=$CONTROL_PLANE_IP" >> $GITHUB_ENV

      - name: Bootstrap ArgoCD and Sync Apps on Control Plane
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.CONTROL_PLANE_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            echo "🔧 Updating system..."
            sudo apt-get update -y
            sudo apt-get install -y git curl

            echo "🚀 Installing ArgoCD..."
            kubectl create namespace argocd || true
            kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

            echo "⏳ Waiting for ArgoCD to be ready..."
            kubectl wait --for=condition=available --timeout=300s deployment/argocd-server -n argocd

            echo "🔐 Getting ArgoCD admin password..."
            kubectl -n argocd get secret argocd-initial-admin-secret \
              -o jsonpath="{.data.password}" | base64 -d && echo

            echo "📦 Cloning repo..."
            rm -rf ~/PolybotInfraFursa
            git clone https://github.com/MajedSaade/PolybotInfraFursa.git ~/PolybotInfraFursa

            echo "📡 Applying apps-of-apps manifest..."
            kubectl apply -f ~/PolybotInfraFursa/k8s/argo-apps/apps-of-apps.yaml

            echo "✅ Bootstrap complete. Access ArgoCD via port-forward or configure Ingress."
