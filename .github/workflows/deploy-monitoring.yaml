name: Deploy Monitoring Stack

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup SSH
        env:
          SSH_KEY: ${{ secrets.MONITORING_EC2_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.MONITORING_EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Upload monitoring stack to EC2
        run: |
          rsync -avz --exclude='.git' --exclude='__pycache__' --exclude='.venv' ./ \
            ubuntu@${{ secrets.MONITORING_EC2_HOST }}:~/monitoring-stack

      - name: Deploy monitoring stack on EC2
        run: |
          ssh -o ServerAliveInterval=60 -o ServerAliveCountMax=3 -tt ubuntu@${{ secrets.MONITORING_EC2_HOST }} <<'EOF'
          set -euo pipefail

          if ! command -v docker &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl enable docker
            sudo usermod -aG docker ubuntu
            sudo systemctl start docker
          fi

          if ! command -v docker-compose &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y docker-compose-plugin
          fi

          cd ~/monitoring-stack
          sudo docker compose pull
          sudo docker compose down || true
          sudo docker compose up -d
          sudo docker ps
          EOF
