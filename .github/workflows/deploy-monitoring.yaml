name: Deploy Monitoring Stack

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup SSH
        env:
          SSH_KEY: ${{ secrets.MONITORING_EC2_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.MONITORING_EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Upload monitoring stack to EC2
        run: |
          rsync -avz --exclude='.git' --exclude='__pycache__' --exclude='.venv' ./ \
            ubuntu@${{ secrets.MONITORING_EC2_HOST }}:~/monitoring-stack

      - name: Upload and execute remote deploy script
        run: |
          ssh ubuntu@${{ secrets.MONITORING_EC2_HOST }} "cat > ~/deploy.sh" <<'EOF'
          #!/bin/bash
          set -eux

          # Install Docker if missing
          if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl enable docker
            sudo usermod -aG docker ubuntu
          fi

          # Install Docker Compose plugin if missing
          if ! sudo docker compose version &> /dev/null; then
            echo "Installing Docker Compose plugin..."
            mkdir -p ~/.docker/cli-plugins/
            curl -SL https://github.com/docker/compose/releases/download/v2.24.7/docker-compose-linux-x86_64 \
              -o ~/.docker/cli-plugins/docker-compose
            chmod +x ~/.docker/cli-plugins/docker-compose
            echo "✅ Docker Compose plugin installed"
          fi

          # Deploy stack
          cd ~/monitoring-stack
          sudo docker compose pull
          sudo docker compose down || true
          sudo docker compose up -d
          sudo docker ps -a
          sudo docker compose logs || true
          echo "✅ Deployment finished"
         EOF

          ssh ubuntu@${{ secrets.MONITORING_EC2_HOST }} "chmod +x ~/deploy.sh && bash ~/deploy.sh"
